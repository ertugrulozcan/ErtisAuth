@using ErtisAuth.Hub.Extensions
@using ErtisAuth.Hub.ViewModels
@model ErtisAuth.Hub.ViewModels.IAuthorizedButtonViewModel

@{
    AuthorizedButtonStyleOptions styleOptions = null;
    if (Model is IStylizedAuthorizedButton stylizedAuthorizedButton)
    {
        styleOptions = stylizedAuthorizedButton.StyleOptions;
    }

    var css = "btn";
    if (styleOptions != null)
    {
        if (!string.IsNullOrEmpty(styleOptions.CssClass))
        {
            css += " btn-" + styleOptions.CssClass;    
        }
        
        if (styleOptions.IsSmall)
        {
            css += " btn-sm";
        }
    
        if (styleOptions.IsWidest)
        {
            css += " btn-widest";
        }
    }
}

@if (this.IsAuthorizedAction(Model.Rbac))
{
    switch (Model)
    {
        case AuthorizedCustomButtonViewModel customButtonViewModel:
        {
            <button type="submit" class="@css">
                @if (!string.IsNullOrEmpty(styleOptions?.BootstrapIcon))
                {
                    <i class="bi bi-@styleOptions.BootstrapIcon"></i>
                }
        
                @customButtonViewModel.Text
            </button>
            break;
        }
        case AuthorizedFormButtonViewModel formButtonViewModel:
        {
            if (!string.IsNullOrEmpty(formButtonViewModel.FormId))
            {
                <button type="submit" class="@css" form="@formButtonViewModel.FormId">
                    @if (!string.IsNullOrEmpty(styleOptions?.BootstrapIcon))
                    {
                        <i class="bi bi-@styleOptions.BootstrapIcon"></i>
                    }
        
                    @formButtonViewModel.Text
                </button>
            }
            break;
        }
        case AuthorizedModalButtonViewModel modalButtonViewModel:
        {
            if (!string.IsNullOrEmpty(modalButtonViewModel.ModalId))
            {
                <button type="button" class="@css" data-bs-toggle="modal" data-bs-target="#@modalButtonViewModel.ModalId">
                    @if (!string.IsNullOrEmpty(styleOptions?.BootstrapIcon))
                    {
                        <i class="bi bi-@styleOptions.BootstrapIcon"></i>
                    }
        
                    @modalButtonViewModel.Text
                </button>
            }
            break;
        }
        default:
        {
            <div>
                <span data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Unknown authorized button type!">
                    <i class="fas fa-exclamation-circle fs-6 text-danger"></i>
                </span>
            </div>
            break;   
        }
    }
}
else if (!Model.HideIfForbidden)
{
    <span class="d-inline-block" tabindex="0" data-bs-toggle="tooltip" data-bs-placement="bottom" title="You do not have sufficient permissions to perform this action">
        <button type="button" class="@css" style="pointer-events: none;" disabled>
            @if (!string.IsNullOrEmpty(styleOptions?.BootstrapIcon))
            {
                <i class="bi bi-@styleOptions.BootstrapIcon"></i>
            }
                
            @Model.Text
        </button>
    </span>
}